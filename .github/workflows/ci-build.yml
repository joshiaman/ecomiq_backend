name: Build, Test, and Push to AWS ECR

on:
  push:
    branches:
      - master  # Runs only when pushing to master

jobs:
  build-and-push:
    name: Build, Test, and Push Docker Image to AWS ECR
    runs-on: ubuntu-latest

    steps:
      # Checkout the repo
      - name: Checkout Code
        uses: actions/checkout@v4

      # Set up Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Authenticate to AWS ECR
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Authenticate to AWS ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ECR_REPOSITORY }}

      # Build Docker Image
      - name: Build Docker Image
        run: |
          docker build -t ecommerce-backend:latest .

      # Tag the image for AWS ECR
      - name: Tag Docker Image
        run: |
          docker tag ecommerce-backend:latest ${{ secrets.AWS_ECR_REPOSITORY }}:latest

      # Push Image to AWS ECR
      - name: Push Image to AWS ECR
        run: |
          docker push ${{ secrets.AWS_ECR_REPOSITORY }}:latest

      # Extract the repository name from the secret URI
      - name: List Images in AWS ECR
        run: |
          ECR_REPOSITORY_NAME="$(basename "${{ secrets.AWS_ECR_REPOSITORY }}")"
          aws ecr list-images --repository-name $ECR_REPOSITORY_NAME
  
  deploy-to-ecs:
    name: Deploy to ECS
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Update ECS Task Definition with new image
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        id: render
        with:
          task-definition: ecomiq-backend
          container-name: rails
          image: ${{ secrets.AWS_ECR_REPOSITORY }}:latest

      - name: Deploy to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          cluster: ecomiq
          service: ecomiq-backend
          task-definition: ${{ steps.render.outputs.task-definition }}

